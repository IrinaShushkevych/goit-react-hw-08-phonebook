{"version":3,"sources":["components/ContactItem/ContactItem.module.css","components/Container/Container.module.css","components/Contacts/Contacts.module.css","components/Filter/Filter.module.css","components/Container/Container.jsx","redux/Contacts/contacts-actions.js","redux/Contacts/contacts-selectors.js","components/Phonebook/Phonebook.jsx","redux/Contacts/contacts-operations.js","components/ContactItem/ContactItem.jsx","components/Contacts/Contacts.jsx","components/Filter/Filter.jsx","App.js","redux/Contacts/contacts-reducer.js","redux/store.js","index.js","components/Phonebook/Phonebook.module.css"],"names":["module","exports","Container","title","children","className","s","container","addContact","createAction","deleteContact","setFilter","fetchContactsRequest","fetchContactsSuccess","fetchContactsError","addContactsRequest","addContactsSuccess","addContactsError","getContacts","state","contacts","items","getFilter","filter","getFilteredContacts","el","name","toUpperCase","includes","getCountContacts","length","Phonebook","useState","setName","number","setNumber","dispatch","useDispatch","useSelector","mainForm","onSubmit","e","preventDefault","contact","obj","phone","alert","a","fetch","method","headers","body","JSON","stringify","then","response","json","message","htmlFor","label","type","input","pattern","value","required","onChange","target","button","ContactItem","id","itemText","onClick","Contacts","useEffect","console","log","list","map","item","Filter","onInput","App","contactsCount","contactsReducer","createReducer","isLoading","payload","currentState","current","store","configureStore","reducer","middleware","getDefaultMiddleware","logger","devTools","process","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b26024c3.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"itemText\":\"ContactItem_itemText__Kf2Rc\",\"button\":\"ContactItem_button__2OxPx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__2ITx6\",\"title\":\"Container_title__20N-x\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"Contacts_list__G3jTs\",\"item\":\"Contacts_item__JsphL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"Filter_label__1dbXs\",\"input\":\"Filter_input__2k_xj\"};","import PropTypes from 'prop-types'\nimport s from './Container.module.css'\n\nfunction Container({ title = '', children }) {\n  return (\n    <div className={s.container}>\n      {title && <h2 className={s.title}>{title}</h2>}\n      {children}\n    </div>\n  )\n}\n\nContainer.propTypes = {\n  title: PropTypes.string,\n  children: PropTypes.node,\n}\n\nexport default Container\n","import { createAction } from '@reduxjs/toolkit'\n\nexport const addContact = createAction('contacts/add')\n\nexport const deleteContact = createAction('contacts/delete')\n\nexport const setFilter = createAction('contacts/filter')\n\nexport const fetchContactsRequest = createAction('contacts/request')\nexport const fetchContactsSuccess = createAction('contacts/success')\nexport const fetchContactsError = createAction('contacts/error')\n\nexport const addContactsRequest = createAction('contacts/request')\nexport const addContactsSuccess = createAction('contacts/success')\nexport const addContactsError = createAction('contacts/error')\n\nexport const deleteContactsRequest = createAction('contacts/request')\nexport const deleteContactsSuccess = createAction('contacts/success')\nexport const deleteContactsError = createAction('contacts/error')\n","export const getContacts = (state) => {\n  return state.contacts.items\n}\n\nexport const getFilter = (state) => state.contacts.filter\n\nexport const getFilteredContacts = (state) => {\n  return getContacts(state).filter((el) =>\n    el?.name.toUpperCase().includes(getFilter(state).toUpperCase()),\n  )\n}\n\nexport const getCountContacts = (state) => {\n  return getContacts(state)?.length ?? 0\n}\n","import { useState } from 'react'\nimport s from './Phonebook.module.css'\nimport { addContact } from '../../redux/Contacts/contacts-operations'\nimport { useDispatch } from 'react-redux'\nimport { useSelector } from 'react-redux'\nimport { getContacts } from '../../redux/Contacts/contacts-selectors'\n\nexport default function Phonebook() {\n  const [name, setName] = useState('')\n  const [number, setNumber] = useState('')\n  const dispatch = useDispatch()\n  const contacts = useSelector(getContacts)\n\n  const handleSubmit = (e) => {\n    e.preventDefault()\n    const obj = { name, phone: number }\n    if (contacts.filter((el) => el.name === name).length !== 0) {\n      alert(`Contacts ${name} already exist`)\n    } else {\n      dispatch(addContact(obj))\n    }\n    setName('')\n    setNumber('')\n  }\n\n  return (\n    <>\n      <form className={s.mainForm} onSubmit={handleSubmit}>\n        <label htmlFor=\"name\" className={s.label}>\n          Name\n          <input\n            type=\"text\"\n            name=\"name\"\n            className={s.input}\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            value={name}\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n            required\n            onChange={(e) => {\n              setName(e.target.value)\n            }}\n          />\n        </label>\n        <label htmlFor=\"number\" className={s.label}>\n          Phone\n          <input\n            type=\"tel\"\n            name=\"number\"\n            className={s.input}\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            value={number}\n            title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n            required\n            onChange={(e) => {\n              setNumber(e.target.value)\n            }}\n          />\n        </label>\n        <button type=\"submit\" className={s.button}>\n          Add contact\n        </button>\n      </form>\n    </>\n  )\n}\n","import {\r\n  addContactsError,\r\n  addContactsRequest,\r\n  addContactsSuccess,\r\n  fetchContactsError,\r\n  fetchContactsRequest,\r\n  fetchContactsSuccess,\r\n} from './contacts-actions'\r\n\r\nexport const fetchContacts = () => async (dispatch) => {\r\n  dispatch(fetchContactsRequest())\r\n  try {\r\n    const contacts = await fetch(\r\n      'https://61d437968df81200178a8b2f.mockapi.io/contacts/contacts',\r\n    ).then((response) => response.json())\r\n    dispatch(fetchContactsSuccess(contacts))\r\n  } catch (error) {\r\n    dispatch(fetchContactsError(error.message))\r\n  }\r\n}\r\n\r\nexport const addContact = (contact) => async (dispatch) => {\r\n  dispatch(addContactsRequest())\r\n  try {\r\n    const addContact = await fetch(\r\n      'https://61d437968df81200178a8b2f.mockapi.io/contacts/contacts',\r\n      {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify(contact),\r\n      },\r\n    ).then((response) => response.json())\r\n    if (addContact) dispatch(addContactsSuccess(addContact))\r\n  } catch (error) {\r\n    dispatch(addContactsError(error.message))\r\n  }\r\n}\r\n","import PropTypes from 'prop-types'\nimport s from './ContactItem.module.css'\nimport { useDispatch } from 'react-redux'\nimport { deleteContact } from '../../redux/Contacts/contacts-actions'\n\nexport default function ContactItem({ id, name, number }) {\n  const dispatch = useDispatch()\n\n  return (\n    <>\n      <span className={s.itemText}>{name}</span>\n      <span className={s.itemText}>{number}</span>\n      <button\n        type=\"button\"\n        className={s.button}\n        data-id={id}\n        onClick={() => {\n          dispatch(deleteContact(id))\n        }}\n      >\n        Delete\n      </button>\n    </>\n  )\n}\n\nContactItem.propTypes = {\n  id: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n}\n","import s from './Contacts.module.css'\n\nimport ContactItem from '../ContactItem/ContactItem'\nimport { useSelector } from 'react-redux'\nimport { getFilteredContacts } from '../../redux/Contacts/contacts-selectors'\nimport { useDispatch } from 'react-redux'\nimport { useEffect } from 'react'\nimport { fetchContacts } from '../../redux/Contacts/contacts-operations'\n\nexport default function Contacts() {\n  const contacts = useSelector(getFilteredContacts)\n  const dispatch = useDispatch()\n\n  useEffect(() => {\n    console.log('effect contacts ')\n    dispatch(fetchContacts())\n  }, [dispatch])\n\n  return (\n    <ul className={s.list}>\n      {contacts.map((el) => (\n        <li className={s.item} key={el.id}>\n          <ContactItem id={el.id} name={el.name} number={el.phone} />\n        </li>\n      ))}\n    </ul>\n  )\n}\n","import { useSelector, useDispatch } from 'react-redux'\nimport s from './Filter.module.css'\nimport { setFilter } from '../../redux/Contacts/contacts-actions'\nimport { getFilter } from '../../redux/Contacts/contacts-selectors'\n\nexport default function Filter() {\n  const filter = useSelector(getFilter)\n  const dispatch = useDispatch()\n  const onFilter = (value) => dispatch(setFilter(value))\n\n  return (\n    <label htmlFor=\"name\" className={s.label}>\n      Find contact by name\n      <input\n        type=\"text\"\n        name=\"name\"\n        className={s.input}\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n        value={filter}\n        title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n        required\n        onInput={(e) => {\n          onFilter(e.target.value)\n        }}\n      />\n    </label>\n  )\n}\n","import { useSelector } from \"react-redux\";\nimport \"./App.css\";\nimport Container from \"./components/Container/Container\";\nimport Phonebook from \"./components/Phonebook/Phonebook\";\nimport Contacts from \"./components/Contacts/Contacts\";\nimport Filter from \"./components/Filter/Filter\";\nimport { getCountContacts } from \"./redux/Contacts/contacts-selectors\";\n\nexport default function App() {\n  const contactsCount = useSelector(getCountContacts);\n\n  return (\n    <div className=\"App\">\n      <Container title=\"Phonebook\">\n        <Phonebook />\n      </Container>\n      <Container title=\"Contacts\">\n        {contactsCount >= 2 && <Filter />}\n        <Contacts />\n      </Container>\n    </div>\n  );\n}\n","import { createReducer } from '@reduxjs/toolkit'\nimport {\n  fetchContactsRequest,\n  addContact,\n  deleteContact,\n  setFilter,\n  fetchContactsSuccess,\n  fetchContactsError,\n} from './contacts-actions'\nimport { current } from 'immer'\n\nconst contacts = { items: [], filter: '', isLoading: false }\n\nexport const contactsReducer = createReducer(\n  { contacts },\n  {\n    [addContact]: (state, { payload }) => {\n      const currentState = current(state)\n      return {\n        contacts: {\n          ...currentState.contacts,\n          items: [...currentState.contacts.items, payload],\n        },\n      }\n    },\n    [deleteContact]: (state, { payload }) => {\n      const currentState = current(state)\n      return {\n        contacts: {\n          ...currentState.contacts,\n          items: [\n            ...currentState.contacts.items.filter((el) => el.id !== payload),\n          ],\n        },\n      }\n    },\n    [setFilter]: (state, { payload }) => {\n      const currentState = current(state)\n      return {\n        contacts: {\n          ...currentState.contacts,\n          filter: payload,\n        },\n      }\n    },\n    [fetchContactsRequest]: (state) => {\n      const currentState = current(state)\n      return { contacts: { ...currentState.contacts, isLoading: true } }\n    },\n    [fetchContactsSuccess]: (state, { payload }) => {\n      const currentState = current(state)\n      return {\n        contacts: {\n          ...currentState.contacts,\n          items: payload,\n          isLoading: false,\n        },\n      }\n    },\n    [fetchContactsError]: (state) => {\n      const currentState = current(state)\n      return { contacts: { ...currentState.contacts, isLoading: false } }\n    },\n  },\n)\n","import { configureStore } from '@reduxjs/toolkit'\nimport logger from 'redux-logger'\nimport { contactsReducer } from './Contacts/contacts-reducer'\n\nconst middleware = (getDefaultMiddleware) => [...getDefaultMiddleware(), logger]\n\nexport const store = configureStore({\n  reducer: contactsReducer,\n  middleware,\n  devTools: process.env.NODE_ENV === 'development',\n})\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { Provider } from 'react-redux'\nimport 'modern-normalize'\nimport './index.css'\nimport App from './App'\nimport { store } from './redux/store'\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n)\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainForm\":\"Phonebook_mainForm__206m_\",\"label\":\"Phonebook_label__3Rxo6\",\"input\":\"Phonebook_input__1-IIH\",\"button\":\"Phonebook_button__21uSq\"};"],"sourceRoot":""}