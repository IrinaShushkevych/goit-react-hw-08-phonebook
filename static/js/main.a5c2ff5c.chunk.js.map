{"version":3,"sources":["components/ContactItem/ContactItem.module.css","components/Phonebook/Phonebook.module.css","components/Container/Container.module.css","components/Contacts/Contacts.module.css","components/Filter/Filter.module.css","redux/Contacts/contacts-reducer.js","components/Container/Container.jsx","utilits/messages.js","components/Phonebook/Phonebook.jsx","redux/Filter/filter-selectors.js","components/Loader/Loader.jsx","components/ContactItem/ContactItem.jsx","components/Contacts/Contacts.jsx","redux/Filter/filter-actions.js","components/Filter/Filter.jsx","App.js","redux/Filter/filter-reducer.js","redux/store.js","index.js"],"names":["module","exports","contactsReducer","createApi","reducerPath","baseQuery","fetchBaseQuery","baseUrl","tagTypes","endpoints","builder","getContacts","query","providesTags","result","map","el","type","id","addContact","mutation","contact","url","method","body","invalidatesTags","deleteContact","editContact","useGetContactsQuery","useAddContactMutation","useDeleteContactMutation","useEditContactMutation","Container","title","children","className","s","container","option","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","theme","onError","message","toast","error","Phonebook","useState","name","setName","number","setNumber","contacts","data","useEffect","status","msg","mainForm","onSubmit","e","preventDefault","obj","phone","filter","toLowerCase","length","warn","htmlFor","label","input","pattern","value","required","onChange","target","button","getFilter","state","override","css","Loader","size","color","loading","ContactItem","nameContact","numberContact","isEdit","setIsEdit","isLoading","errorDelete","changeContact","errorEdit","isCgange","itemText","onClick","disabled","fontSize","Contacts","isFetching","useSelector","list","toUpperCase","includes","item","setFilter","createAction","Filter","dispatch","useDispatch","onInput","App","filterReducer","createReducer","_","payload","store","configureStore","reducer","middleware","getDefaultMiddleware","logger","devTools","process","setupListeners","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a5c2ff5c.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"itemText\":\"ContactItem_itemText__Kf2Rc\",\"button\":\"ContactItem_button__2OxPx\",\"input\":\"ContactItem_input__CqfNY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainForm\":\"Phonebook_mainForm__206m_\",\"label\":\"Phonebook_label__3Rxo6\",\"input\":\"Phonebook_input__1-IIH\",\"button\":\"Phonebook_button__21uSq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__2ITx6\",\"title\":\"Container_title__20N-x\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"Contacts_list__G3jTs\",\"item\":\"Contacts_item__JsphL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"Filter_label__1dbXs\",\"input\":\"Filter_input__2k_xj\"};","//ДЗ виконала Шушкевич Ірина\n\nimport { createApi, fetchBaseQuery } from '@reduxjs/toolkit/query/react'\n\nexport const contactsReducer = createApi({\n  reducerPath: 'contacts',\n  baseQuery: fetchBaseQuery({\n    baseUrl: 'https://61d437968df81200178a8b2f.mockapi.io/contacts/contacts',\n  }),\n  tagTypes: ['contacts'],\n  endpoints: (builder) => ({\n    getContacts: builder.query({\n      query: () => '/',\n      providesTags: (result) =>\n        result\n          ? [\n              ...result.map((el) => ({ type: 'contacts', id: el.id })),\n              'contacts',\n            ]\n          : ['contacts'],\n    }),\n    addContact: builder.mutation({\n      query: (contact) => ({\n        url: '/',\n        method: 'POST',\n        body: contact,\n      }),\n      invalidatesTags: ['contacts'],\n    }),\n    deleteContact: builder.mutation({\n      query: (id) => ({\n        url: `/${id}`,\n        method: 'DELETE',\n      }),\n      invalidatesTags: (result) =>\n        result ? [{ type: 'contacts', id: result.id }] : ['contacts'],\n    }),\n    editContact: builder.mutation({\n      query: (contact) => ({\n        url: `/${contact.id}`,\n        method: 'PUT',\n        body: contact,\n      }),\n      invalidatesTags: (result) =>\n        result\n          ? [...result.map((el) => ({ type: 'contacts', id: el.id }))]\n          : ['contacts'],\n    }),\n  }),\n})\n\nexport const {\n  useGetContactsQuery,\n  useAddContactMutation,\n  useDeleteContactMutation,\n  useEditContactMutation,\n} = contactsReducer\n","import PropTypes from 'prop-types'\nimport s from './Container.module.css'\n\nfunction Container({ title = '', children }) {\n  return (\n    <div className={s.container}>\n      {title && <h2 className={s.title}>{title}</h2>}\n      {children}\n    </div>\n  )\n}\n\nContainer.propTypes = {\n  title: PropTypes.string,\n  children: PropTypes.node,\n}\n\nexport default Container\n","import { toast } from \"react-toastify\";\n\nconst option = {\n  position: \"top-right\",\n  autoClose: 5000,\n  hideProgressBar: false,\n  closeOnClick: true,\n  pauseOnHover: true,\n  draggable: true,\n  progress: undefined,\n  theme: \"dark\",\n};\n\nexport const onError = (message) => {\n  toast.error(message, option);\n};\n\nexport const onWarning = (message) => {\n  toast.warn(message, option);\n};\n\nexport const onSuccess = (message) => {\n  toast.success(message, option);\n};\n","//ДЗ виконала Шушкевич Ірина\nimport { useEffect, useState } from 'react'\nimport {\n  useAddContactMutation,\n  useGetContactsQuery,\n} from '../../redux/Contacts/contacts-reducer'\nimport { onError, onWarning } from '../../utilits/messages'\nimport s from './Phonebook.module.css'\n\nexport default function Phonebook() {\n  const [name, setName] = useState('')\n  const [number, setNumber] = useState('')\n  const { data: contacts } = useGetContactsQuery()\n  const [addContact, { error }] = useAddContactMutation()\n\n  useEffect(() => {\n    if (error) onError(`${error.status} ${error.data.msg}`)\n  }, [error])\n\n  const handleSubmit = (e) => {\n    e.preventDefault()\n    const obj = { name, phone: number }\n    if (\n      contacts.filter((el) => el.name.toLowerCase() === name.toLowerCase())\n        .length !== 0\n    ) {\n      onWarning(`Contacts ${name} already exist`)\n    } else {\n      addContact(obj)\n    }\n    setName('')\n    setNumber('')\n  }\n\n  return (\n    <>\n      <form className={s.mainForm} onSubmit={handleSubmit}>\n        <label htmlFor=\"name\" className={s.label}>\n          Name\n          <input\n            type=\"text\"\n            name=\"name\"\n            className={s.input}\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            value={name}\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n            required\n            onChange={(e) => {\n              setName(e.target.value)\n            }}\n          />\n        </label>\n        <label htmlFor=\"number\" className={s.label}>\n          Phone\n          <input\n            type=\"tel\"\n            name=\"number\"\n            className={s.input}\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            value={number}\n            title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n            required\n            onChange={(e) => {\n              setNumber(e.target.value)\n            }}\n          />\n        </label>\n        <button type=\"submit\" className={s.button}>\n          Add contact\n        </button>\n      </form>\n    </>\n  )\n}\n","//ДЗ виконала Шушкевич Ірина\n\nexport const getFilter = (state) => state.filter\n","import { css } from '@emotion/react'\nimport { PropTypes } from 'prop-types'\nimport CircleLoader from 'react-spinners/CircleLoader'\n\nconst override = css`\n  display: block;\n  margin: 0px 6px;\n`\n\nconst loading = true\n\nfunction Loader({ size = 50 }) {\n  return (\n    <CircleLoader\n      color=\"rgb(6, 255, 247)\"\n      loading={loading}\n      css={override}\n      size={size}\n    />\n  )\n}\n\nLoader.propTypes = {\n  size: PropTypes.number,\n}\n\nexport default Loader\n","//ДЗ виконала Шушкевич Ірина\nimport PropTypes from 'prop-types'\nimport { useEffect, useState } from 'react'\nimport DeleteForeverRoundedIcon from '@mui/icons-material/DeleteForeverRounded'\nimport EditOffRoundedIcon from '@mui/icons-material/EditOffRounded'\nimport SaveAltRoundedIcon from '@mui/icons-material/SaveAltRounded'\nimport HighlightOffRoundedIcon from '@mui/icons-material/HighlightOffRounded'\nimport {\n  useDeleteContactMutation,\n  useEditContactMutation,\n} from '../../redux/Contacts/contacts-reducer'\nimport s from './ContactItem.module.css'\nimport Loader from '../Loader/Loader'\nimport { onError } from '../../utilits/messages'\n\nexport default function ContactItem({ id, nameContact, numberContact }) {\n  const [isEdit, setIsEdit] = useState(false)\n  const [name, setName] = useState(nameContact)\n  const [number, setNumber] = useState(numberContact)\n  const [\n    deleteContact,\n    { isLoading, error: errorDelete },\n  ] = useDeleteContactMutation()\n  const [changeContact, { error: errorEdit }] = useEditContactMutation()\n\n  useEffect(() => {\n    if (errorDelete) onError(`${errorDelete.status} ${errorDelete.data.msg}`)\n  }, [errorDelete])\n\n  useEffect(() => {\n    if (errorEdit) {\n      onError(`${errorEdit.status} ${errorEdit.data.msg}`)\n      setName(nameContact)\n      setNumber(numberContact)\n    }\n  }, [errorEdit])\n\n  const onChange = (isCgange) => {\n    if (!isCgange) {\n      setName(nameContact)\n      setNumber(numberContact)\n    } else {\n      changeContact({ id, name, phone: number })\n    }\n    setIsEdit(false)\n  }\n\n  return (\n    <>\n      {isEdit ? (\n        <input\n          type=\"text\"\n          name=\"name\"\n          className={s.input}\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          value={name}\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n          onChange={(e) => {\n            setName(e.target.value)\n          }}\n        />\n      ) : (\n        <span className={s.itemText}>{name}</span>\n      )}\n      {isEdit ? (\n        <input\n          type=\"tel\"\n          name=\"number\"\n          className={s.input}\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          value={number}\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n          onChange={(e) => {\n            setNumber(e.target.value)\n          }}\n        />\n      ) : (\n        <span className={s.itemText}>{number}</span>\n      )}\n      {!isEdit && (\n        <button\n          type=\"button\"\n          className={s.button}\n          data-id={id}\n          onClick={() => {\n            setIsEdit(true)\n          }}\n          disabled={isLoading}\n        >\n          <EditOffRoundedIcon fontSize=\"small\" />\n        </button>\n      )}\n      {isEdit && (\n        <button\n          type=\"button\"\n          className={s.button}\n          data-id={id}\n          onClick={() => {\n            onChange(true)\n          }}\n          disabled={isLoading}\n        >\n          <SaveAltRoundedIcon fontSize=\"small\" />\n        </button>\n      )}\n      {isEdit && (\n        <button\n          type=\"button\"\n          className={s.button}\n          data-id={id}\n          onClick={() => {\n            onChange(false)\n          }}\n          disabled={isLoading}\n        >\n          <HighlightOffRoundedIcon fontSize=\"small\" />\n        </button>\n      )}\n      <button\n        type=\"button\"\n        className={s.button}\n        data-id={id}\n        onClick={() => {\n          deleteContact(id)\n        }}\n        disabled={isLoading}\n      >\n        {isLoading && <Loader size={15} />}\n        <DeleteForeverRoundedIcon fontSize=\"small\" />\n      </button>\n    </>\n  )\n}\n\nContactItem.propTypes = {\n  id: PropTypes.string.isRequired,\n  nameContact: PropTypes.string.isRequired,\n  numberContact: PropTypes.string.isRequired,\n}\n","import s from './Contacts.module.css'\nimport { useGetContactsQuery } from '../../redux/Contacts/contacts-reducer'\nimport { getFilter } from '../../redux/Filter/filter-selectors'\nimport { useSelector } from 'react-redux'\n\nimport ContactItem from '../ContactItem/ContactItem'\nimport Loader from '../Loader/Loader'\nimport { onError } from '../../utilits/messages'\nimport { useEffect } from 'react'\n\nexport default function Contacts() {\n  const { data, error, isFetching } = useGetContactsQuery()\n\n  useEffect(() => {\n    if (error) onError(`${error.status} ${error.data}`)\n  }, [error])\n\n  const filter = useSelector(getFilter)\n\n  return (\n    <ul className={s.list}>\n      {isFetching && <Loader />}\n      {data &&\n        data\n          .filter((el) => el?.name.toUpperCase().includes(filter.toUpperCase()))\n          .map((el) => (\n            <li className={s.item} key={el.id}>\n              <ContactItem\n                id={el.id}\n                nameContact={el.name}\n                numberContact={el.phone}\n              />\n            </li>\n          ))}\n    </ul>\n  )\n}\n","import { createAction } from '@reduxjs/toolkit'\n\nexport const setFilter = createAction('filter')\n","import { useSelector, useDispatch } from 'react-redux'\nimport s from './Filter.module.css'\nimport { setFilter } from '../../redux/Filter/filter-actions'\nimport { getFilter } from '../../redux/Filter/filter-selectors'\n\nexport default function Filter() {\n  const filter = useSelector(getFilter)\n  const dispatch = useDispatch()\n  const onFilter = (value) => dispatch(setFilter(value))\n\n  return (\n    <label htmlFor=\"name\" className={s.label}>\n      Find contact by name\n      <input\n        type=\"text\"\n        name=\"name\"\n        className={s.input}\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n        value={filter}\n        title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n        required\n        onInput={(e) => {\n          onFilter(e.target.value)\n        }}\n      />\n    </label>\n  )\n}\n","import { useGetContactsQuery } from './redux/Contacts/contacts-reducer'\nimport './App.css'\nimport Container from './components/Container/Container'\nimport Phonebook from './components/Phonebook/Phonebook'\nimport Contacts from './components/Contacts/Contacts'\nimport Filter from './components/Filter/Filter'\n\nexport default function App() {\n  const { data } = useGetContactsQuery()\n  return (\n    <div className=\"App\">\n      <Container title=\"Phonebook\">\n        <Phonebook />\n      </Container>\n      <Container title=\"Contacts\">\n        {data && data.length >= 2 && <Filter />}\n        <Contacts />\n      </Container>\n    </div>\n  )\n}\n","import { createReducer } from '@reduxjs/toolkit'\r\nimport { setFilter } from './filter-actions'\r\n\r\nexport const filterReducer = createReducer('', {\r\n  [setFilter]: (_, { payload }) => payload,\r\n})\r\n","import { configureStore } from '@reduxjs/toolkit'\nimport { setupListeners } from '@reduxjs/toolkit/dist/query'\nimport logger from 'redux-logger'\nimport { contactsReducer } from './Contacts/contacts-reducer'\nimport { filterReducer } from './Filter/filter-reducer'\n\nconst middleware = (getDefaultMiddleware) => [\n  ...getDefaultMiddleware(),\n  contactsReducer.middleware,\n  logger,\n]\n\nexport const store = configureStore({\n  reducer: {\n    [contactsReducer.reducerPath]: contactsReducer.reducer,\n    filter: filterReducer,\n  },\n  middleware,\n  devTools: process.env.NODE_ENV === 'development',\n})\n\nsetupListeners(store.dispatch)\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { Provider } from 'react-redux'\nimport 'modern-normalize'\nimport './index.css'\nimport App from './App'\nimport { store } from './redux/store'\nimport { ToastContainer } from 'react-toastify'\nimport 'react-toastify/dist/ReactToastify.css'\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n      <ToastContainer />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n)\n"],"sourceRoot":""}