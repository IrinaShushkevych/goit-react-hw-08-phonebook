{"version":3,"sources":["components/ContactItem/ContactItem.module.css","components/Container/Container.module.css","components/Contacts/Contacts.module.css","components/Filter/Filter.module.css","components/Container/Container.jsx","utilits/api.js","redux/Contacts/contacts-operations.js","redux/Contacts/contacts-selectors.js","components/Phonebook/Phonebook.jsx","components/ContactItem/ContactItem.jsx","components/Contacts/Contacts.jsx","redux/Contacts/contacts-actions.js","components/Filter/Filter.jsx","App.js","redux/Contacts/contacts-reducer.js","redux/store.js","index.js","components/Phonebook/Phonebook.module.css"],"names":["module","exports","Container","title","children","className","s","container","baseURL","apiAddContact","contact","fetch","method","headers","body","JSON","stringify","then","response","json","apiDeleteContact","id","fetchContacts","createAsyncThunk","a","addContact","data","deleteContact","getContacts","state","contacts","items","getFilter","filter","getFilteredContacts","length","el","name","toUpperCase","includes","getCountContacts","Phonebook","useState","setName","number","setNumber","dispatch","useDispatch","useSelector","mainForm","onSubmit","e","preventDefault","obj","phone","alert","htmlFor","label","type","input","pattern","value","required","onChange","target","button","ContactItem","itemText","onClick","Contacts","useEffect","list","map","item","setFilter","createAction","Filter","onInput","App","contactsCount","contactsReducer","createReducer","isLoading","errorMessage","payload","pending","fulfilled","push","rejected","error","store","configureStore","reducer","middleware","getDefaultMiddleware","logger","devTools","process","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1bc8c34d.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"itemText\":\"ContactItem_itemText__Kf2Rc\",\"button\":\"ContactItem_button__2OxPx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__2ITx6\",\"title\":\"Container_title__20N-x\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"Contacts_list__G3jTs\",\"item\":\"Contacts_item__JsphL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"Filter_label__1dbXs\",\"input\":\"Filter_input__2k_xj\"};","import PropTypes from 'prop-types'\nimport s from './Container.module.css'\n\nfunction Container({ title = '', children }) {\n  return (\n    <div className={s.container}>\n      {title && <h2 className={s.title}>{title}</h2>}\n      {children}\n    </div>\n  )\n}\n\nContainer.propTypes = {\n  title: PropTypes.string,\n  children: PropTypes.node,\n}\n\nexport default Container\n","//ДЗ виконала Шушкевич Ірина\r\nconst baseURL = 'https://61d437968df81200178a8b2f.mockapi.io/contacts/contacts'\r\n\r\nexport const apiFetchContacts = () => {\r\n  return fetch(baseURL).then((response) => response.json())\r\n}\r\n\r\nexport const apiAddContact = (contact) => {\r\n  return fetch(baseURL, {\r\n    method: 'POST',\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n    },\r\n    body: JSON.stringify(contact),\r\n  }).then((response) => response.json())\r\n}\r\n\r\nexport const apiDeleteContact = (id) => {\r\n  return fetch(`${baseURL}/${id}`, {\r\n    method: 'DELETE',\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n    },\r\n  }).then((response) => response.json())\r\n}\r\n","import { createAsyncThunk } from '@reduxjs/toolkit'\r\nimport {\r\n  apiAddContact,\r\n  apiDeleteContact,\r\n  apiFetchContacts,\r\n} from '../../utilits/api'\r\n\r\nexport const fetchContacts = createAsyncThunk('fetchContacts', async () => {\r\n  const contact = await apiFetchContacts()\r\n  return contact\r\n})\r\n\r\nexport const addContact = createAsyncThunk('addContact', async (contact) => {\r\n  const data = await apiAddContact(contact)\r\n  return data\r\n})\r\n\r\nexport const deleteContact = createAsyncThunk('deleteContact', async (id) => {\r\n  const data = await apiDeleteContact(id)\r\n  return data\r\n})\r\n","//ДЗ виконала Шушкевич Ірина\nexport const getContacts = (state) => state.contacts.items\n\nexport const getFilter = (state) => state.contacts.filter\n\nexport const getFilteredContacts = (state) => {\n  const contacts = getContacts(state)\n  return contacts.length > 0\n    ? getContacts(state).filter((el) => {\n        return el?.name.toUpperCase().includes(getFilter(state).toUpperCase())\n      })\n    : []\n}\n\nexport const getCountContacts = (state) => {\n  return getContacts(state)?.length ?? 0\n}\n","//ДЗ виконала Шушкевич Ірина\nimport { useState } from 'react'\nimport s from './Phonebook.module.css'\nimport { addContact } from '../../redux/Contacts/contacts-operations'\nimport { useDispatch } from 'react-redux'\nimport { useSelector } from 'react-redux'\nimport { getContacts } from '../../redux/Contacts/contacts-selectors'\n\nexport default function Phonebook() {\n  const [name, setName] = useState('')\n  const [number, setNumber] = useState('')\n  const dispatch = useDispatch()\n  const contacts = useSelector(getContacts)\n\n  const handleSubmit = (e) => {\n    e.preventDefault()\n    const obj = { name, phone: number }\n    if (contacts.filter((el) => el.name === name).length !== 0) {\n      alert(`Contacts ${name} already exist`)\n    } else {\n      dispatch(addContact(obj))\n    }\n    setName('')\n    setNumber('')\n  }\n\n  return (\n    <>\n      <form className={s.mainForm} onSubmit={handleSubmit}>\n        <label htmlFor=\"name\" className={s.label}>\n          Name\n          <input\n            type=\"text\"\n            name=\"name\"\n            className={s.input}\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            value={name}\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n            required\n            onChange={(e) => {\n              setName(e.target.value)\n            }}\n          />\n        </label>\n        <label htmlFor=\"number\" className={s.label}>\n          Phone\n          <input\n            type=\"tel\"\n            name=\"number\"\n            className={s.input}\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            value={number}\n            title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n            required\n            onChange={(e) => {\n              setNumber(e.target.value)\n            }}\n          />\n        </label>\n        <button type=\"submit\" className={s.button}>\n          Add contact\n        </button>\n      </form>\n    </>\n  )\n}\n","//ДЗ виконала Шушкевич Ірина\nimport PropTypes from 'prop-types'\nimport s from './ContactItem.module.css'\nimport { useDispatch } from 'react-redux'\nimport { deleteContact } from '../../redux/Contacts/contacts-operations'\n\nexport default function ContactItem({ id, name, number }) {\n  const dispatch = useDispatch()\n\n  return (\n    <>\n      <span className={s.itemText}>{name}</span>\n      <span className={s.itemText}>{number}</span>\n      <button\n        type=\"button\"\n        className={s.button}\n        data-id={id}\n        onClick={() => {\n          dispatch(deleteContact(id))\n        }}\n      >\n        Delete\n      </button>\n    </>\n  )\n}\n\nContactItem.propTypes = {\n  id: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n}\n","import s from './Contacts.module.css'\n\nimport ContactItem from '../ContactItem/ContactItem'\nimport { useSelector } from 'react-redux'\nimport { getFilteredContacts } from '../../redux/Contacts/contacts-selectors'\nimport { useDispatch } from 'react-redux'\nimport { useEffect } from 'react'\nimport { fetchContacts } from '../../redux/Contacts/contacts-operations'\n\nexport default function Contacts() {\n  const contacts = useSelector(getFilteredContacts)\n  const dispatch = useDispatch()\n\n  useEffect(() => {\n    dispatch(fetchContacts())\n  }, [dispatch])\n\n  return (\n    <ul className={s.list}>\n      {contacts.map((el) => (\n        <li className={s.item} key={el.id}>\n          <ContactItem id={el.id} name={el.name} number={el.phone} />\n        </li>\n      ))}\n    </ul>\n  )\n}\n","import { createAction } from '@reduxjs/toolkit'\n\nexport const setFilter = createAction('contacts/filter')\n","import { useSelector, useDispatch } from 'react-redux'\nimport s from './Filter.module.css'\nimport { setFilter } from '../../redux/Contacts/contacts-actions'\nimport { getFilter } from '../../redux/Contacts/contacts-selectors'\n\nexport default function Filter() {\n  const filter = useSelector(getFilter)\n  const dispatch = useDispatch()\n  const onFilter = (value) => dispatch(setFilter(value))\n\n  return (\n    <label htmlFor=\"name\" className={s.label}>\n      Find contact by name\n      <input\n        type=\"text\"\n        name=\"name\"\n        className={s.input}\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n        value={filter}\n        title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n        required\n        onInput={(e) => {\n          onFilter(e.target.value)\n        }}\n      />\n    </label>\n  )\n}\n","import { useSelector } from \"react-redux\";\nimport \"./App.css\";\nimport Container from \"./components/Container/Container\";\nimport Phonebook from \"./components/Phonebook/Phonebook\";\nimport Contacts from \"./components/Contacts/Contacts\";\nimport Filter from \"./components/Filter/Filter\";\nimport { getCountContacts } from \"./redux/Contacts/contacts-selectors\";\n\nexport default function App() {\n  const contactsCount = useSelector(getCountContacts);\n\n  return (\n    <div className=\"App\">\n      <Container title=\"Phonebook\">\n        <Phonebook />\n      </Container>\n      <Container title=\"Contacts\">\n        {contactsCount >= 2 && <Filter />}\n        <Contacts />\n      </Container>\n    </div>\n  );\n}\n","//ДЗ виконала Шушкевич Ірина\nimport { createReducer } from '@reduxjs/toolkit'\nimport { setFilter } from './contacts-actions'\nimport { fetchContacts, addContact, deleteContact } from './contacts-operations'\n\nconst contacts = { items: [], filter: '', isLoading: false, errorMessage: '' }\n\nexport const contactsReducer = createReducer(\n  { contacts },\n  {\n    [setFilter]: (state, { payload }) => {\n      state.contacts.filter = payload\n    },\n    [addContact.pending]: (state) => {\n      state.contacts.isLoading = true\n      state.contacts.errorMessage = ''\n    },\n    [addContact.fulfilled]: (state, { payload }) => {\n      state.contacts.isLoading = false\n      state.contacts.items.push(payload)\n    },\n    [addContact.rejected]: (state, { error }) => {\n      state.contacts.isLoading = true\n      state.contacts.errorMessage = error.name\n    },\n    [deleteContact.pending]: (state) => {\n      state.contacts.isLoading = true\n      state.contacts.errorMessage = ''\n    },\n    [deleteContact.fulfilled]: (state, { payload }) => {\n      state.contacts.isLoading = false\n      state.contacts.items = state.contacts.items.filter(\n        (el) => el.id !== payload.id,\n      )\n    },\n    [deleteContact.rejected]: (state, { error }) => {\n      state.contacts.isLoading = false\n      state.contacts.errorMessage = error.name\n    },\n    [fetchContacts.pending]: (state) => {\n      state.contacts.isLoading = true\n      state.errorMessage = ''\n    },\n    [fetchContacts.fulfilled]: (state, { payload }) => {\n      state.contacts.items = payload\n      state.contacts.isLoading = false\n    },\n    [fetchContacts.rejected]: (state, { error }) => {\n      state.contacts.isLoading = false\n      state.contacts.errorMessage = error.name\n    },\n  },\n)\n","import { configureStore } from '@reduxjs/toolkit'\nimport logger from 'redux-logger'\nimport { contactsReducer } from './Contacts/contacts-reducer'\n\nconst middleware = (getDefaultMiddleware) => [...getDefaultMiddleware(), logger]\n\nexport const store = configureStore({\n  reducer: contactsReducer,\n  middleware,\n  devTools: process.env.NODE_ENV === 'development',\n})\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { Provider } from 'react-redux'\nimport 'modern-normalize'\nimport './index.css'\nimport App from './App'\nimport { store } from './redux/store'\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n)\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainForm\":\"Phonebook_mainForm__206m_\",\"label\":\"Phonebook_label__3Rxo6\",\"input\":\"Phonebook_input__1-IIH\",\"button\":\"Phonebook_button__21uSq\"};"],"sourceRoot":""}