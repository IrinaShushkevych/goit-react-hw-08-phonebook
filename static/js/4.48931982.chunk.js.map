{"version":3,"sources":["components/ButtonPathClose/ButtonClose.styled.js","components/ButtonPathClose/ButtonPathClose.js","components/Phonebook/Phonebook.jsx","redux/Filter/filter-selectors.js","components/Loader/Loader.jsx","components/ContactItem/ContactItem.jsx","components/Contacts/Contacts.jsx","components/Filter/Filter.jsx","pages/contacts.js","components/Phonebook/Phonebook.module.css","components/Contacts/Contacts.module.css","components/ContactItem/ContactItem.module.css","components/Filter/Filter.module.css"],"names":["ButtonClose","styled","button","ButtonPathClose","location","useLocation","navigate","useNavigate","onClick","path","pathname","split","length","join","fontSize","Phonebook","useState","name","setName","number","setNumber","contacts","useGetContactsQuery","data","useAddContactMutation","addContact","error","useEffect","onError","status","msg","className","s","mainForm","onSubmit","e","preventDefault","contact","filter","el","toLowerCase","onWarning","htmlFor","label","type","input","pattern","value","title","required","onChange","target","getFilter","state","override","css","Loader","size","color","loading","ContactItem","id","nameContact","numberContact","isEdit","setIsEdit","useDeleteContactMutation","deleteContact","isLoading","errorDelete","useEditContactMutation","changeContact","errorEdit","isCgange","itemText","disabled","Contacts","token","useSelector","getToken","isFetching","list","toUpperCase","includes","map","item","Filter","dispatch","useDispatch","onInput","setFilter","ContactsPage","element","Container","module","exports"],"mappings":"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","file":"static/js/4.48931982.chunk.js","sourcesContent":["//created by Irina Shushkevych\r\nimport styled from '@emotion/styled'\r\n\r\nexport const ButtonClose = styled.button`\r\n  position: absolute;\r\n  top: 10px;\r\n  right: 10px;\r\n  width: 50px;\r\n  height: 50px;\r\n  padding: 0;\r\n  border: none;\r\n  cursor: pointer;\r\n  color: wheat;\r\n  background: transparent;\r\n`\r\n","//created by Irina Shushkevych\r\nimport { ButtonClose } from './ButtonClose.styled'\r\nimport CloseIcon from '@mui/icons-material/Close'\r\nimport { useLocation, useNavigate } from 'react-router-dom'\r\n\r\nexport default function ButtonPathClose() {\r\n  const location = useLocation()\r\n  const navigate = useNavigate()\r\n\r\n  const onClose = () => {\r\n    const path = location.pathname.split('/')\r\n    path.length -= 1\r\n    navigate(path.join('/'))\r\n  }\r\n\r\n  return (\r\n    <ButtonClose onClick={onClose}>\r\n      <CloseIcon fontSize=\"large\" />\r\n    </ButtonClose>\r\n  )\r\n}\r\n","//created by Irina Shushkevych\r\nimport { useEffect, useState } from 'react'\r\nimport {\r\n  useAddContactMutation,\r\n  useGetContactsQuery,\r\n} from '../../redux/Contacts/contacts-reducer'\r\nimport { onError, onWarning } from '../../utilits/messages'\r\nimport s from './Phonebook.module.css'\r\nimport ButtonPathClose from '../ButtonPathClose'\r\n\r\nexport default function Phonebook() {\r\n  const [name, setName] = useState('')\r\n  const [number, setNumber] = useState('')\r\n  const { data: contacts } = useGetContactsQuery()\r\n  const [addContact, { error }] = useAddContactMutation()\r\n\r\n  useEffect(() => {\r\n    if (error) onError(`${error.status} ${error.data.msg}`)\r\n  }, [error])\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault()\r\n    const contact = { name, number }\r\n    if (\r\n      contacts &&\r\n      contacts.filter((el) => el.name.toLowerCase() === name.toLowerCase())\r\n        .length !== 0\r\n    ) {\r\n      onWarning(`Contacts ${name} already exist`)\r\n    } else {\r\n      addContact(contact)\r\n    }\r\n    setName('')\r\n    setNumber('')\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <ButtonPathClose />\r\n      <form className={s.mainForm} onSubmit={handleSubmit}>\r\n        <label htmlFor=\"name\" className={s.label}>\r\n          Name\r\n          <input\r\n            type=\"text\"\r\n            name=\"name\"\r\n            className={s.input}\r\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n            value={name}\r\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\r\n            required\r\n            onChange={(e) => {\r\n              setName(e.target.value)\r\n            }}\r\n          />\r\n        </label>\r\n        <label htmlFor=\"number\" className={s.label}>\r\n          Phone\r\n          <input\r\n            type=\"tel\"\r\n            name=\"number\"\r\n            className={s.input}\r\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n            value={number}\r\n            title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\r\n            required\r\n            onChange={(e) => {\r\n              setNumber(e.target.value)\r\n            }}\r\n          />\r\n        </label>\r\n        <button type=\"submit\" className={s.button}>\r\n          Add contact\r\n        </button>\r\n      </form>\r\n    </>\r\n  )\r\n}\r\n","//created by Irina Shushkevych\r\n\r\nexport const getFilter = (state) => state.filter\r\n","//created by Irina Shushkevych\r\nimport { css } from '@emotion/react'\r\nimport { PropTypes } from 'prop-types'\r\nimport CircleLoader from 'react-spinners/CircleLoader'\r\n\r\nconst override = css`\r\n  display: block;\r\n  margin: 0px 6px;\r\n`\r\n\r\nconst loading = true\r\n\r\nfunction Loader({ size = 50 }) {\r\n  return (\r\n    <CircleLoader\r\n      color=\"rgb(6, 255, 247)\"\r\n      loading={loading}\r\n      css={override}\r\n      size={size}\r\n    />\r\n  )\r\n}\r\n\r\nLoader.propTypes = {\r\n  size: PropTypes.number,\r\n}\r\n\r\nexport default Loader\r\n","//created by Irina Shushkevych\r\nimport PropTypes from 'prop-types'\r\nimport { useEffect, useState } from 'react'\r\nimport DeleteForeverRoundedIcon from '@mui/icons-material/DeleteForeverRounded'\r\nimport EditOffRoundedIcon from '@mui/icons-material/EditOffRounded'\r\nimport SaveAltRoundedIcon from '@mui/icons-material/SaveAltRounded'\r\nimport HighlightOffRoundedIcon from '@mui/icons-material/HighlightOffRounded'\r\nimport {\r\n  useDeleteContactMutation,\r\n  useEditContactMutation,\r\n} from '../../redux/Contacts/contacts-reducer'\r\nimport s from './ContactItem.module.css'\r\nimport Loader from '../Loader/Loader'\r\nimport { onError } from '../../utilits/messages'\r\n\r\nexport default function ContactItem({ id, nameContact, numberContact }) {\r\n  const [isEdit, setIsEdit] = useState(false)\r\n  const [name, setName] = useState(nameContact)\r\n  const [number, setNumber] = useState(numberContact)\r\n  const [\r\n    deleteContact,\r\n    { isLoading, error: errorDelete },\r\n  ] = useDeleteContactMutation()\r\n  const [changeContact, { error: errorEdit }] = useEditContactMutation()\r\n\r\n  useEffect(() => {\r\n    if (errorDelete) onError(`${errorDelete.status} ${errorDelete.data.msg}`)\r\n  }, [errorDelete])\r\n\r\n  useEffect(() => {\r\n    if (errorEdit) {\r\n      onError(`${errorEdit.status} ${errorEdit.data.msg}`)\r\n      setName(nameContact)\r\n      setNumber(numberContact)\r\n    }\r\n  }, [errorEdit])\r\n\r\n  const onChange = (isCgange) => {\r\n    if (!isCgange) {\r\n      setName(nameContact)\r\n      setNumber(numberContact)\r\n    } else {\r\n      changeContact({ contact: { name, number }, id })\r\n    }\r\n    setIsEdit(false)\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {isEdit ? (\r\n        <input\r\n          type=\"text\"\r\n          name=\"name\"\r\n          className={s.input}\r\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n          value={name}\r\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\r\n          required\r\n          onChange={(e) => {\r\n            setName(e.target.value)\r\n          }}\r\n        />\r\n      ) : (\r\n        <span className={s.itemText}>{name}</span>\r\n      )}\r\n      {isEdit ? (\r\n        <input\r\n          type=\"tel\"\r\n          name=\"number\"\r\n          className={s.input}\r\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n          value={number}\r\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\r\n          required\r\n          onChange={(e) => {\r\n            setNumber(e.target.value)\r\n          }}\r\n        />\r\n      ) : (\r\n        <span className={s.itemText}>{number}</span>\r\n      )}\r\n      {!isEdit && (\r\n        <button\r\n          type=\"button\"\r\n          className={s.button}\r\n          data-id={id}\r\n          onClick={() => {\r\n            setIsEdit(true)\r\n          }}\r\n          disabled={isLoading}\r\n        >\r\n          <EditOffRoundedIcon fontSize=\"small\" />\r\n        </button>\r\n      )}\r\n      {isEdit && (\r\n        <button\r\n          type=\"button\"\r\n          className={s.button}\r\n          data-id={id}\r\n          onClick={() => {\r\n            onChange(true)\r\n          }}\r\n          disabled={isLoading}\r\n        >\r\n          <SaveAltRoundedIcon fontSize=\"small\" />\r\n        </button>\r\n      )}\r\n      {isEdit && (\r\n        <button\r\n          type=\"button\"\r\n          className={s.button}\r\n          data-id={id}\r\n          onClick={() => {\r\n            onChange(false)\r\n          }}\r\n          disabled={isLoading}\r\n        >\r\n          <HighlightOffRoundedIcon fontSize=\"small\" />\r\n        </button>\r\n      )}\r\n      <button\r\n        type=\"button\"\r\n        className={s.button}\r\n        data-id={id}\r\n        onClick={() => {\r\n          deleteContact(id)\r\n        }}\r\n        disabled={isLoading}\r\n      >\r\n        {isLoading && <Loader size={15} />}\r\n        <DeleteForeverRoundedIcon fontSize=\"small\" />\r\n      </button>\r\n    </>\r\n  )\r\n}\r\n\r\nContactItem.propTypes = {\r\n  id: PropTypes.string.isRequired,\r\n  nameContact: PropTypes.string.isRequired,\r\n  numberContact: PropTypes.string.isRequired,\r\n}\r\n","//created by Irina Shushkevych\r\nimport s from './Contacts.module.css'\r\nimport { useGetContactsQuery } from '../../redux/Contacts/contacts-reducer'\r\nimport { getFilter } from '../../redux/Filter/filter-selectors'\r\nimport { useSelector } from 'react-redux'\r\n\r\nimport ContactItem from '../ContactItem/ContactItem'\r\nimport Loader from '../Loader/Loader'\r\nimport { onError } from '../../utilits/messages'\r\nimport { useEffect } from 'react'\r\nimport { getToken } from '../../redux/Auth/auth-selector'\r\nimport { useNavigate } from 'react-router-dom'\r\n\r\nexport default function Contacts() {\r\n  const token = useSelector(getToken)\r\n  const { data, error, isFetching } = useGetContactsQuery({ token })\r\n  const navigate = useNavigate()\r\n\r\n  useEffect(() => {\r\n    if (error) onError(`${error.status} ${error.data}`)\r\n  }, [error])\r\n\r\n  useEffect(() => {\r\n    if (!token) {\r\n      navigate('/')\r\n    }\r\n  }, [token, navigate])\r\n\r\n  const filter = useSelector(getFilter)\r\n\r\n  return (\r\n    <ul className={s.list}>\r\n      {isFetching && <Loader />}\r\n      {data &&\r\n        data\r\n          .filter((el) => el?.name.toUpperCase().includes(filter.toUpperCase()))\r\n          .map((el) => (\r\n            <li className={s.item} key={el.id}>\r\n              <ContactItem\r\n                id={el.id}\r\n                nameContact={el.name}\r\n                numberContact={el.number}\r\n              />\r\n            </li>\r\n          ))}\r\n    </ul>\r\n  )\r\n}\r\n","//created by Irina Shushkevych\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport s from './Filter.module.css'\r\nimport { setFilter } from '../../redux/Filter/filter-actions'\r\nimport { getFilter } from '../../redux/Filter/filter-selectors'\r\n\r\nexport default function Filter() {\r\n  const filter = useSelector(getFilter)\r\n  const dispatch = useDispatch()\r\n  const onFilter = (value) => dispatch(setFilter(value))\r\n\r\n  return (\r\n    <label htmlFor=\"name\" className={s.label}>\r\n      Find contact by name\r\n      <input\r\n        type=\"text\"\r\n        name=\"name\"\r\n        className={s.input}\r\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n        value={filter}\r\n        title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\r\n        required\r\n        onInput={(e) => {\r\n          onFilter(e.target.value)\r\n        }}\r\n      />\r\n    </label>\r\n  )\r\n}\r\n","//created by Irina Shushkevych\r\nimport { useGetContactsQuery } from '../redux/Contacts/contacts-reducer'\r\nimport Container from '../components/Container/Container'\r\nimport Phonebook from '../components/Phonebook/Phonebook'\r\nimport Contacts from '../components/Contacts/Contacts'\r\nimport Filter from '../components/Filter/Filter'\r\nimport { Routes, Route } from 'react-router-dom'\r\n\r\nexport default function ContactsPage() {\r\n  const { data } = useGetContactsQuery()\r\n\r\n  return (\r\n    <>\r\n      <Routes>\r\n        <Route\r\n          path=\"add\"\r\n          element={\r\n            <Container title=\"Phonebook\">\r\n              <Phonebook />\r\n            </Container>\r\n          }\r\n        />\r\n      </Routes>\r\n      <Container title=\"Contacts\">\r\n        {data && data.length >= 2 && <Filter />}\r\n        <Contacts />\r\n      </Container>\r\n    </>\r\n  )\r\n}\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainForm\":\"Phonebook_mainForm__1vSBA\",\"label\":\"Phonebook_label__2gNkL\",\"input\":\"Phonebook_input__2dZzU\",\"button\":\"Phonebook_button__1g3Um\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"Contacts_list__8lH_7\",\"item\":\"Contacts_item__LcJzr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"itemText\":\"ContactItem_itemText__1g5Wr\",\"button\":\"ContactItem_button__3niij\",\"input\":\"ContactItem_input__3TcMB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"Filter_label___RAql\",\"input\":\"Filter_input__30aPy\"};"],"sourceRoot":""}