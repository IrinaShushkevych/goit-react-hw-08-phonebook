{"version":3,"sources":["redux/Users/users-selector.js","utilits/messages.js","components/Container/Container.jsx","redux/Contacts/contacts-reducer.js","components/Container/Container.module.css","redux/Filter/filter-actions.js","utilits/api.js","redux/Users/users-operation.js","components/UserMenu/UserMenu.js","pages/login.js","pages/register.js","App.js","redux/Filter/filter-reducer.js","redux/Users/users-reducer.js","redux/store.js","index.js"],"names":["getUser","state","users","name","getError","error","getIsLoading","isLoading","getToken","token","option","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","theme","onError","message","toast","onWarning","warn","Container","title","children","className","s","container","contactsReducer","createApi","reducerPath","baseQuery","fetchBaseQuery","baseUrl","tagTypes","endpoints","builder","getContacts","query","url","headers","Authorization","providesTags","result","map","el","type","id","addContact","mutation","contact","method","body","invalidatesTags","deleteContact","editContact","useGetContactsQuery","useAddContactMutation","useDeleteContactMutation","useEditContactMutation","module","exports","setFilter","createAction","BASE_API","registerUserAPI","user","fetch","JSON","stringify","then","response","status","json","Error","statusText","loginUserAPI","logoutUserAPI","registerUser","createAsyncThunk","a","data","loginUser","logoutUser","UserMenu","useSelector","dispatch","useDispatch","useEffect","to","onClick","LoginPage","useState","sessionStorage","getItem","email","setEmail","password","setPassword","useForm","register","handleSubmit","errors","formState","navigate","useNavigate","userError","userName","onChange","e","value","target","setItem","onSubmit","removeItem","required","RegisterPage","setName","ContactsPage","lazy","App","fallback","path","element","filterReducer","createReducer","_","payload","console","log","pending","usersReducer","action","fulfilled","rejected","store","configureStore","reducer","middleware","getDefaultMiddleware","process","devTools","setupListeners","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4b32f811.chunk.js","sourcesContent":["export const getUser = (state) => state.users.name\r\n\r\nexport const getError = (state) => state.users.error\r\n\r\nexport const getIsLoading = (state) => state.users.isLoading\r\n\r\nexport const getToken = (state) => state?.users?.token ?? ''\r\n","import { toast } from \"react-toastify\";\r\n\r\nconst option = {\r\n  position: \"top-right\",\r\n  autoClose: 5000,\r\n  hideProgressBar: false,\r\n  closeOnClick: true,\r\n  pauseOnHover: true,\r\n  draggable: true,\r\n  progress: undefined,\r\n  theme: \"dark\",\r\n};\r\n\r\nexport const onError = (message) => {\r\n  toast.error(message, option);\r\n};\r\n\r\nexport const onWarning = (message) => {\r\n  toast.warn(message, option);\r\n};\r\n\r\nexport const onSuccess = (message) => {\r\n  toast.success(message, option);\r\n};\r\n","import PropTypes from 'prop-types'\r\nimport s from './Container.module.css'\r\n\r\nfunction Container({ title = '', children }) {\r\n  return (\r\n    <div className={s.container}>\r\n      {title && <h2 className={s.title}>{title}</h2>}\r\n      {children}\r\n    </div>\r\n  )\r\n}\r\n\r\nContainer.propTypes = {\r\n  title: PropTypes.string,\r\n  children: PropTypes.node,\r\n}\r\n\r\nexport default Container\r\n","//created by Irina Shushkevych\r\n//https://connections-api.herokuapp.com\r\n\r\nimport { createApi, fetchBaseQuery } from '@reduxjs/toolkit/query/react'\r\n\r\nexport const contactsReducer = createApi({\r\n  reducerPath: 'contacts',\r\n  baseQuery: fetchBaseQuery({\r\n    baseUrl: 'https://connections-api.herokuapp.com/contacts',\r\n  }),\r\n  tagTypes: ['contacts'],\r\n  endpoints: (builder) => ({\r\n    getContacts: builder.query({\r\n      query: ({ token }) => {\r\n        return {\r\n          url: '/',\r\n          headers: {\r\n            Authorization: `Bearer ${token}`,\r\n          },\r\n        }\r\n      },\r\n      providesTags: (result) =>\r\n        result\r\n          ? [\r\n              ...result.map((el) => ({ type: 'contacts', id: el.id })),\r\n              'contacts',\r\n            ]\r\n          : ['contacts'],\r\n    }),\r\n    addContact: builder.mutation({\r\n      query: ({ contact, token }) => {\r\n        return {\r\n          url: '/',\r\n          method: 'POST',\r\n          headers: {\r\n            Authorization: `Bearer ${token}`,\r\n          },\r\n          body: contact,\r\n        }\r\n      },\r\n      invalidatesTags: ['contacts'],\r\n    }),\r\n    deleteContact: builder.mutation({\r\n      query: ({ id, token }) => ({\r\n        url: `/${id}`,\r\n        method: 'DELETE',\r\n        headers: {\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n      }),\r\n      invalidatesTags: (result) =>\r\n        result ? [{ type: 'contacts', id: result.id }] : ['contacts'],\r\n    }),\r\n    editContact: builder.mutation({\r\n      query: ({ contact, id, token }) => {\r\n        return {\r\n          url: `/${id}`,\r\n          method: 'PATCH',\r\n          headers: {\r\n            Authorization: `Bearer ${token}`,\r\n          },\r\n          body: contact,\r\n        }\r\n      },\r\n      invalidatesTags: (result) =>\r\n        result\r\n          ? [...result.map((el) => ({ type: 'contacts', id: el.id }))]\r\n          : ['contacts'],\r\n    }),\r\n  }),\r\n})\r\n\r\nexport const {\r\n  useGetContactsQuery,\r\n  useAddContactMutation,\r\n  useDeleteContactMutation,\r\n  useEditContactMutation,\r\n} = contactsReducer\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__YdtW5\",\"title\":\"Container_title__UrP9o\"};","import { createAction } from '@reduxjs/toolkit'\r\n\r\nexport const setFilter = createAction('filter')\r\n","const BASE_API = 'https://connections-api.herokuapp.com/users'\r\n\r\nexport const registerUserAPI = (user) => {\r\n  return fetch(`${BASE_API}/signup`, {\r\n    method: 'POST',\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n    },\r\n    body: JSON.stringify(user),\r\n  }).then((response) => {\r\n    switch (response.status) {\r\n      case 201:\r\n        return response.json()\r\n      case 400:\r\n        throw Error('Wrong name, login or password')\r\n      case 404:\r\n        throw Error('Not found')\r\n      case 500:\r\n        throw Error('Servers error')\r\n      default:\r\n        throw Error(response.statusText)\r\n    }\r\n  })\r\n}\r\n\r\nexport const loginUserAPI = (user) => {\r\n  return fetch(`${BASE_API}/login`, {\r\n    method: 'POST',\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n    },\r\n    body: JSON.stringify(user),\r\n  }).then((response) => {\r\n    switch (response.status) {\r\n      case 200:\r\n        return response.json()\r\n      case 400:\r\n        throw Error('Wrong login or password')\r\n      case 404:\r\n        throw Error('Not found')\r\n      default:\r\n        throw Error(response.statusText)\r\n    }\r\n  })\r\n}\r\n\r\nexport const logoutUserAPI = (token) => {\r\n  return fetch(`${BASE_API}/logout`, {\r\n    method: 'POST',\r\n    headers: {\r\n      Authorization: `Bearer ${token}`,\r\n    },\r\n  }).then((response) => {\r\n    switch (response.status) {\r\n      case 200:\r\n        return response.json()\r\n      case 401:\r\n        throw Error('No authorization')\r\n      default:\r\n        throw Error('Unknown error')\r\n    }\r\n  })\r\n}\r\n","import { createAsyncThunk } from '@reduxjs/toolkit'\r\n\r\nimport { registerUserAPI, loginUserAPI, logoutUserAPI } from '../../utilits/api'\r\n\r\nexport const registerUser = createAsyncThunk('register', async (user) => {\r\n  const data = await registerUserAPI(user)\r\n  return data\r\n})\r\n\r\nexport const loginUser = createAsyncThunk('login', async (user) => {\r\n  const data = await loginUserAPI(user)\r\n  return data\r\n})\r\n\r\nexport const logoutUser = createAsyncThunk('logout', async (token) => {\r\n  const data = await logoutUserAPI(token)\r\n  return data\r\n})\r\n","import { useDispatch, useSelector } from 'react-redux'\r\nimport { Link, Outlet } from 'react-router-dom'\r\nimport { getError, getToken, getUser } from '../../redux/Users/users-selector'\r\nimport Container from '../Container/Container'\r\nimport { logoutUser } from '../../redux/Users/users-operation'\r\nimport { useEffect } from 'react'\r\nimport { onError } from '../../utilits/messages'\r\n\r\nexport default function UserMenu() {\r\n  const users = useSelector(getUser)\r\n  const error = useSelector(getError)\r\n  const token = useSelector(getToken)\r\n  const dispatch = useDispatch()\r\n\r\n  useEffect(() => {\r\n    if (error) {\r\n      onError(error)\r\n    }\r\n  }, [error])\r\n\r\n  return (\r\n    <>\r\n      <Container>\r\n        <h1>{users}</h1>\r\n        <ul>\r\n          {!users && (\r\n            <>\r\n              <li>\r\n                <Link to=\"register\">Register</Link>\r\n              </li>\r\n              <li>\r\n                <Link to=\"login\">LogIn</Link>\r\n              </li>\r\n            </>\r\n          )}\r\n          {users && (\r\n            <li>\r\n              <Link\r\n                to=\"/\"\r\n                onClick={() => {\r\n                  dispatch(logoutUser(token))\r\n                }}\r\n              >\r\n                LogOut\r\n              </Link>\r\n            </li>\r\n          )}\r\n        </ul>\r\n      </Container>\r\n      <Outlet />\r\n    </>\r\n  )\r\n}\r\n","import { useForm } from 'react-hook-form'\r\nimport { useNavigate } from 'react-router-dom'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\n\r\nimport Container from '../components/Container/Container'\r\nimport { loginUser } from '../redux/Users/users-operation'\r\nimport { getError, getIsLoading, getUser } from '../redux/Users/users-selector'\r\nimport { useEffect, useState } from 'react'\r\nimport { onError } from '../utilits/messages'\r\n\r\nexport default function LoginPage() {\r\n  const [email, setEmail] = useState(sessionStorage.getItem('email') ?? '')\r\n  const [password, setPassword] = useState('')\r\n\r\n  const {\r\n    register,\r\n    handleSubmit,\r\n    formState: { errors },\r\n  } = useForm()\r\n  const navigate = useNavigate()\r\n  const dispatch = useDispatch()\r\n  const isLoading = useSelector(getIsLoading)\r\n  const userError = useSelector(getError)\r\n  const userName = useSelector(getUser)\r\n\r\n  const onSubmit = (data) => {\r\n    dispatch(\r\n      loginUser({\r\n        email: 'testtast4@gmail.com',\r\n        password: 'qwert-11',\r\n      }),\r\n    )\r\n    setEmail('')\r\n    setPassword('')\r\n    sessionStorage.removeItem('email')\r\n  }\r\n\r\n  const onCancel = () => {\r\n    sessionStorage.removeItem('email')\r\n    navigate('/')\r\n  }\r\n\r\n  const onChange = (e) => {\r\n    const value = e.target.value\r\n    switch (e.target.name) {\r\n      case 'email':\r\n        setEmail(value)\r\n        sessionStorage.setItem('email', value)\r\n        break\r\n      case 'password':\r\n        setPassword(value)\r\n        break\r\n      default:\r\n        return\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (userError) {\r\n      onError(userError)\r\n    }\r\n  }, [userError])\r\n\r\n  useEffect(() => {\r\n    if (userName) {\r\n      navigate('/contacts')\r\n    }\r\n  }, [userName, navigate])\r\n\r\n  return (\r\n    <Container>\r\n      <h2>Form Login</h2>\r\n      {isLoading && <h3>Loading....</h3>}\r\n      <form onSubmit={handleSubmit(onSubmit)}>\r\n        <label>\r\n          email\r\n          <input\r\n            type=\"email\"\r\n            {...register('email', { required: true })}\r\n            onChange={onChange}\r\n            value={email}\r\n          />\r\n          {errors.email?.type === 'required' && 'Email is required'}\r\n        </label>\r\n        <label>\r\n          password\r\n          <input\r\n            type=\"password\"\r\n            {...register('password', { required: true })}\r\n            onChange={onChange}\r\n            value={password}\r\n          />\r\n          {errors.password?.type === 'required' && 'Password is required'}\r\n        </label>\r\n        <button type=\"button\" onClick={onCancel}>\r\n          Cancel\r\n        </button>\r\n        <button type=\"submit\">Log in</button>\r\n      </form>\r\n    </Container>\r\n  )\r\n}\r\n","import { useForm } from 'react-hook-form'\r\nimport { useNavigate } from 'react-router-dom'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Container from '../components/Container/Container'\r\nimport { registerUser } from '../redux/Users/users-operation'\r\nimport { getError, getIsLoading } from '../redux/Users/users-selector'\r\nimport { useEffect, useState } from 'react'\r\nimport { onError } from '../utilits/messages'\r\n\r\nexport default function RegisterPage() {\r\n  const [name, setName] = useState(sessionStorage.getItem('name') ?? '')\r\n  const [email, setEmail] = useState(sessionStorage.getItem('email') ?? '')\r\n  const [password, setPassword] = useState('')\r\n\r\n  const {\r\n    register,\r\n    handleSubmit,\r\n    formState: { errors },\r\n  } = useForm()\r\n  const navigate = useNavigate()\r\n  const dispatch = useDispatch()\r\n  const isLoading = useSelector(getIsLoading)\r\n  const userError = useSelector(getError)\r\n\r\n  const onSubmit = (data) => {\r\n    dispatch(\r\n      registerUser({\r\n        name: 'TestTest3',\r\n        email: 'testtast4@gmail.com',\r\n        password: 'qwert-11',\r\n      }),\r\n    )\r\n    setName('')\r\n    setEmail('')\r\n    setPassword('')\r\n    sessionStorage.removeItem('name')\r\n    sessionStorage.removeItem('email')\r\n  }\r\n\r\n  const onCancel = () => {\r\n    sessionStorage.removeItem('name')\r\n    sessionStorage.removeItem('email')\r\n    navigate('/')\r\n  }\r\n\r\n  const onChange = (e) => {\r\n    const value = e.target.value\r\n    switch (e.target.name) {\r\n      case 'name':\r\n        setName(value)\r\n        sessionStorage.setItem('name', value)\r\n        break\r\n      case 'email':\r\n        setEmail(value)\r\n        sessionStorage.setItem('email', value)\r\n        break\r\n      case 'password':\r\n        setPassword(value)\r\n        break\r\n      default:\r\n        return\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (userError) {\r\n      onError(userError)\r\n    }\r\n  }, [userError])\r\n\r\n  return (\r\n    <Container>\r\n      <h2>Form Register</h2>\r\n      {isLoading && <h3>Loading....</h3>}\r\n      <form onSubmit={handleSubmit(onSubmit)}>\r\n        <label>\r\n          name\r\n          <input {...register('name')} value={name} onChange={onChange} />\r\n        </label>\r\n        <label>\r\n          email\r\n          <input\r\n            type=\"email\"\r\n            {...register('email', { required: true })}\r\n            onChange={onChange}\r\n            value={email}\r\n          />\r\n          {errors.email?.type === 'required' && 'Email is required'}\r\n        </label>\r\n        <label>\r\n          password\r\n          <input\r\n            type=\"password\"\r\n            {...register('password', { required: true })}\r\n            onChange={onChange}\r\n            value={password}\r\n          />\r\n          {errors.password?.type === 'required' && 'Password is required'}\r\n        </label>\r\n        <button type=\"button\" onClick={onCancel}>\r\n          Cancel\r\n        </button>\r\n        <button type=\"submit\">Register</button>\r\n      </form>\r\n    </Container>\r\n  )\r\n}\r\n","import { Route, Routes, Navigate } from 'react-router-dom'\r\nimport { lazy, Suspense } from 'react'\r\n\r\nimport './App.css'\r\n\r\nimport UserMenu from './components/UserMenu'\r\nimport LoginPage from './pages/login'\r\nimport RegisterPage from './pages/register'\r\n\r\nconst ContactsPage = lazy(() => import('./pages/contacts'))\r\n\r\nexport default function App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <Suspense fallback={<p>Loading....</p>}>\r\n        <Routes>\r\n          <Route path=\"/\" element={<UserMenu />}>\r\n            <Route path=\"login\" element={<LoginPage />} />\r\n            <Route path=\"register\" element={<RegisterPage />} />\r\n            <Route path=\"contacts\" element={<ContactsPage />} />\r\n          </Route>\r\n          <Route path=\"*\" element={<Navigate to=\"/\" />} />\r\n        </Routes>\r\n      </Suspense>\r\n    </div>\r\n  )\r\n}\r\n","import { createReducer } from '@reduxjs/toolkit'\r\nimport { setFilter } from './filter-actions'\r\n\r\nexport const filterReducer = createReducer('', {\r\n  [setFilter]: (_, { payload }) => payload,\r\n})\r\n","import { createReducer } from '@reduxjs/toolkit'\r\nimport { registerUser, loginUser, logoutUser } from './users-operation'\r\nimport { current } from 'immer'\r\n\r\nconsole.log([registerUser.pending])\r\nconst initialState = {\r\n  name: '',\r\n  email: '',\r\n  token: '',\r\n  error: '',\r\n  isLoading: false,\r\n}\r\n\r\nexport const usersReducer = createReducer(initialState, {\r\n  [registerUser.pending]: (state, action) => {\r\n    state.isLoading = true\r\n    state.error = ''\r\n  },\r\n  [registerUser.fulfilled]: (state, { payload }) => {\r\n    state.token = payload.token\r\n    state.name = payload.user.name\r\n    state.email = payload.user.email\r\n    state.error = ''\r\n    state.isLoading = false\r\n  },\r\n  [registerUser.rejected]: (state, { error }) => {\r\n    state.error = error.message\r\n    state.isLoading = false\r\n  },\r\n  [loginUser.pending]: (state, action) => {\r\n    state.isLoading = true\r\n    state.error = ''\r\n  },\r\n  [loginUser.fulfilled]: (state, { payload }) => {\r\n    state.token = payload.token\r\n    state.name = payload.user.name\r\n    state.email = payload.user.email\r\n    state.error = ''\r\n    state.isLoading = false\r\n  },\r\n  [loginUser.rejected]: (state, { error }) => {\r\n    state.error = error.message\r\n    state.isLoading = false\r\n  },\r\n  [logoutUser.pending]: (state, action) => {\r\n    state.isLoading = true\r\n    state.error = ''\r\n  },\r\n  [logoutUser.fulfilled]: (state, { payload }) => {\r\n    state.token = ''\r\n    state.name = ''\r\n    state.email = ''\r\n    state.error = ''\r\n    state.isLoading = false\r\n  },\r\n  [logoutUser.rejected]: (state, { error }) => {\r\n    state.error = error.message\r\n    state.isLoading = false\r\n  },\r\n})\r\n","import { configureStore } from '@reduxjs/toolkit'\r\nimport { setupListeners } from '@reduxjs/toolkit/dist/query'\r\nimport logger from 'redux-logger'\r\nimport { contactsReducer } from './Contacts/contacts-reducer'\r\nimport { filterReducer } from './Filter/filter-reducer'\r\nimport { usersReducer } from './Users/users-reducer'\r\n\r\nconst middleware = (getDefaultMiddleware) => [\r\n  ...getDefaultMiddleware(),\r\n  contactsReducer.middleware,\r\n  process.env.NODE_ENV !== 'production' && logger,\r\n]\r\n\r\nexport const store = configureStore({\r\n  reducer: {\r\n    users: usersReducer,\r\n    [contactsReducer.reducerPath]: contactsReducer.reducer,\r\n    filter: filterReducer,\r\n  },\r\n  middleware,\r\n  devTools: process.env.NODE_ENV === 'development',\r\n})\r\n\r\nsetupListeners(store.dispatch)\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport { Provider } from 'react-redux'\r\nimport { BrowserRouter } from 'react-router-dom'\r\nimport 'modern-normalize'\r\nimport './index.css'\r\nimport App from './App'\r\nimport { store } from './redux/store'\r\nimport { ToastContainer } from 'react-toastify'\r\nimport 'react-toastify/dist/ReactToastify.css'\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <BrowserRouter>\r\n        <App />\r\n      </BrowserRouter>\r\n      <ToastContainer />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n)\r\n"],"sourceRoot":""}