{"version":3,"sources":["components/Phonebook/Phonebook.jsx","redux/Filter/filter-selectors.js","components/Loader/Loader.jsx","components/ContactItem/ContactItem.jsx","components/Contacts/Contacts.jsx","components/Filter/Filter.jsx","pages/contacts.js","components/Phonebook/Phonebook.module.css","components/Contacts/Contacts.module.css","components/ContactItem/ContactItem.module.css","components/Filter/Filter.module.css"],"names":["Phonebook","token","useSelector","getToken","useState","name","setName","number","setNumber","contacts","useGetContactsQuery","data","useAddContactMutation","addContact","error","useEffect","onError","status","msg","className","s","mainForm","onSubmit","e","preventDefault","contact","filter","el","toLowerCase","length","onWarning","htmlFor","label","type","input","pattern","value","title","required","onChange","target","button","getFilter","state","override","css","Loader","size","color","loading","ContactItem","id","nameContact","numberContact","isEdit","setIsEdit","useDeleteContactMutation","deleteContact","isLoading","errorDelete","useEditContactMutation","changeContact","errorEdit","isCgange","itemText","onClick","disabled","fontSize","Contacts","isFetching","navigate","useNavigate","list","toUpperCase","includes","map","item","Filter","dispatch","useDispatch","onInput","setFilter","ContactsPage","Container","module","exports"],"mappings":"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","file":"static/js/4.d8ddcf70.chunk.js","sourcesContent":["//ДЗ виконала Шушкевич Ірина\r\nimport { useEffect, useState } from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport {\r\n  useAddContactMutation,\r\n  useGetContactsQuery,\r\n} from '../../redux/Contacts/contacts-reducer'\r\nimport { getToken } from '../../redux/Users/users-selector'\r\nimport { onError, onWarning } from '../../utilits/messages'\r\nimport s from './Phonebook.module.css'\r\n\r\nexport default function Phonebook() {\r\n  const token = useSelector(getToken)\r\n  const [name, setName] = useState('')\r\n  const [number, setNumber] = useState('')\r\n  const { data: contacts } = useGetContactsQuery({ token })\r\n  const [addContact, { error }] = useAddContactMutation()\r\n\r\n  useEffect(() => {\r\n    if (error) onError(`${error.status} ${error.data.msg}`)\r\n  }, [error])\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault()\r\n    const contact = { name, number }\r\n    if (\r\n      contacts &&\r\n      contacts.filter((el) => el.name.toLowerCase() === name.toLowerCase())\r\n        .length !== 0\r\n    ) {\r\n      onWarning(`Contacts ${name} already exist`)\r\n    } else {\r\n      addContact({ contact, token })\r\n    }\r\n    setName('')\r\n    setNumber('')\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <form className={s.mainForm} onSubmit={handleSubmit}>\r\n        <label htmlFor=\"name\" className={s.label}>\r\n          Name\r\n          <input\r\n            type=\"text\"\r\n            name=\"name\"\r\n            className={s.input}\r\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n            value={name}\r\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\r\n            required\r\n            onChange={(e) => {\r\n              setName(e.target.value)\r\n            }}\r\n          />\r\n        </label>\r\n        <label htmlFor=\"number\" className={s.label}>\r\n          Phone\r\n          <input\r\n            type=\"tel\"\r\n            name=\"number\"\r\n            className={s.input}\r\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n            value={number}\r\n            title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\r\n            required\r\n            onChange={(e) => {\r\n              setNumber(e.target.value)\r\n            }}\r\n          />\r\n        </label>\r\n        <button type=\"submit\" className={s.button}>\r\n          Add contact\r\n        </button>\r\n      </form>\r\n    </>\r\n  )\r\n}\r\n","//ДЗ виконала Шушкевич Ірина\r\n\r\nexport const getFilter = (state) => state.filter\r\n","import { css } from '@emotion/react'\r\nimport { PropTypes } from 'prop-types'\r\nimport CircleLoader from 'react-spinners/CircleLoader'\r\n\r\nconst override = css`\r\n  display: block;\r\n  margin: 0px 6px;\r\n`\r\n\r\nconst loading = true\r\n\r\nfunction Loader({ size = 50 }) {\r\n  return (\r\n    <CircleLoader\r\n      color=\"rgb(6, 255, 247)\"\r\n      loading={loading}\r\n      css={override}\r\n      size={size}\r\n    />\r\n  )\r\n}\r\n\r\nLoader.propTypes = {\r\n  size: PropTypes.number,\r\n}\r\n\r\nexport default Loader\r\n","//ДЗ виконала Шушкевич Ірина\r\nimport PropTypes from 'prop-types'\r\nimport { useEffect, useState } from 'react'\r\nimport DeleteForeverRoundedIcon from '@mui/icons-material/DeleteForeverRounded'\r\nimport EditOffRoundedIcon from '@mui/icons-material/EditOffRounded'\r\nimport SaveAltRoundedIcon from '@mui/icons-material/SaveAltRounded'\r\nimport HighlightOffRoundedIcon from '@mui/icons-material/HighlightOffRounded'\r\nimport {\r\n  useDeleteContactMutation,\r\n  useEditContactMutation,\r\n} from '../../redux/Contacts/contacts-reducer'\r\nimport s from './ContactItem.module.css'\r\nimport Loader from '../Loader/Loader'\r\nimport { onError } from '../../utilits/messages'\r\nimport { getToken } from '../../redux/Users/users-selector'\r\nimport { useSelector } from 'react-redux'\r\n\r\nexport default function ContactItem({ id, nameContact, numberContact }) {\r\n  const token = useSelector(getToken)\r\n  const [isEdit, setIsEdit] = useState(false)\r\n  const [name, setName] = useState(nameContact)\r\n  const [number, setNumber] = useState(numberContact)\r\n  const [\r\n    deleteContact,\r\n    { isLoading, error: errorDelete },\r\n  ] = useDeleteContactMutation()\r\n  const [changeContact, { error: errorEdit }] = useEditContactMutation()\r\n\r\n  useEffect(() => {\r\n    if (errorDelete) onError(`${errorDelete.status} ${errorDelete.data.msg}`)\r\n  }, [errorDelete])\r\n\r\n  useEffect(() => {\r\n    if (errorEdit) {\r\n      onError(`${errorEdit.status} ${errorEdit.data.msg}`)\r\n      setName(nameContact)\r\n      setNumber(numberContact)\r\n    }\r\n  }, [errorEdit])\r\n\r\n  const onChange = (isCgange) => {\r\n    if (!isCgange) {\r\n      setName(nameContact)\r\n      setNumber(numberContact)\r\n    } else {\r\n      changeContact({ contact: { name, number }, id, token })\r\n    }\r\n    setIsEdit(false)\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {isEdit ? (\r\n        <input\r\n          type=\"text\"\r\n          name=\"name\"\r\n          className={s.input}\r\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n          value={name}\r\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\r\n          required\r\n          onChange={(e) => {\r\n            setName(e.target.value)\r\n          }}\r\n        />\r\n      ) : (\r\n        <span className={s.itemText}>{name}</span>\r\n      )}\r\n      {isEdit ? (\r\n        <input\r\n          type=\"tel\"\r\n          name=\"number\"\r\n          className={s.input}\r\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n          value={number}\r\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\r\n          required\r\n          onChange={(e) => {\r\n            setNumber(e.target.value)\r\n          }}\r\n        />\r\n      ) : (\r\n        <span className={s.itemText}>{number}</span>\r\n      )}\r\n      {!isEdit && (\r\n        <button\r\n          type=\"button\"\r\n          className={s.button}\r\n          data-id={id}\r\n          onClick={() => {\r\n            setIsEdit(true)\r\n          }}\r\n          disabled={isLoading}\r\n        >\r\n          <EditOffRoundedIcon fontSize=\"small\" />\r\n        </button>\r\n      )}\r\n      {isEdit && (\r\n        <button\r\n          type=\"button\"\r\n          className={s.button}\r\n          data-id={id}\r\n          onClick={() => {\r\n            onChange(true)\r\n          }}\r\n          disabled={isLoading}\r\n        >\r\n          <SaveAltRoundedIcon fontSize=\"small\" />\r\n        </button>\r\n      )}\r\n      {isEdit && (\r\n        <button\r\n          type=\"button\"\r\n          className={s.button}\r\n          data-id={id}\r\n          onClick={() => {\r\n            onChange(false)\r\n          }}\r\n          disabled={isLoading}\r\n        >\r\n          <HighlightOffRoundedIcon fontSize=\"small\" />\r\n        </button>\r\n      )}\r\n      <button\r\n        type=\"button\"\r\n        className={s.button}\r\n        data-id={id}\r\n        onClick={() => {\r\n          deleteContact({ id, token })\r\n        }}\r\n        disabled={isLoading}\r\n      >\r\n        {isLoading && <Loader size={15} />}\r\n        <DeleteForeverRoundedIcon fontSize=\"small\" />\r\n      </button>\r\n    </>\r\n  )\r\n}\r\n\r\nContactItem.propTypes = {\r\n  id: PropTypes.string.isRequired,\r\n  nameContact: PropTypes.string.isRequired,\r\n  numberContact: PropTypes.string.isRequired,\r\n}\r\n","import s from './Contacts.module.css'\r\nimport { useGetContactsQuery } from '../../redux/Contacts/contacts-reducer'\r\nimport { getFilter } from '../../redux/Filter/filter-selectors'\r\nimport { useSelector } from 'react-redux'\r\n\r\nimport ContactItem from '../ContactItem/ContactItem'\r\nimport Loader from '../Loader/Loader'\r\nimport { onError } from '../../utilits/messages'\r\nimport { useEffect } from 'react'\r\nimport { getToken } from '../../redux/Users/users-selector'\r\nimport { useNavigate } from 'react-router-dom'\r\n\r\nexport default function Contacts() {\r\n  const token = useSelector(getToken)\r\n  const { data, error, isFetching } = useGetContactsQuery({ token })\r\n  const navigate = useNavigate()\r\n\r\n  useEffect(() => {\r\n    if (error) onError(`${error.status} ${error.data}`)\r\n  }, [error])\r\n\r\n  useEffect(() => {\r\n    if (!token) {\r\n      navigate('/')\r\n    }\r\n  }, [token, navigate])\r\n\r\n  const filter = useSelector(getFilter)\r\n\r\n  return (\r\n    <ul className={s.list}>\r\n      {isFetching && <Loader />}\r\n      {data &&\r\n        data\r\n          .filter((el) => el?.name.toUpperCase().includes(filter.toUpperCase()))\r\n          .map((el) => (\r\n            <li className={s.item} key={el.id}>\r\n              <ContactItem\r\n                id={el.id}\r\n                nameContact={el.name}\r\n                numberContact={el.number}\r\n              />\r\n            </li>\r\n          ))}\r\n    </ul>\r\n  )\r\n}\r\n","import { useSelector, useDispatch } from 'react-redux'\r\nimport s from './Filter.module.css'\r\nimport { setFilter } from '../../redux/Filter/filter-actions'\r\nimport { getFilter } from '../../redux/Filter/filter-selectors'\r\n\r\nexport default function Filter() {\r\n  const filter = useSelector(getFilter)\r\n  const dispatch = useDispatch()\r\n  const onFilter = (value) => dispatch(setFilter(value))\r\n\r\n  return (\r\n    <label htmlFor=\"name\" className={s.label}>\r\n      Find contact by name\r\n      <input\r\n        type=\"text\"\r\n        name=\"name\"\r\n        className={s.input}\r\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n        value={filter}\r\n        title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\r\n        required\r\n        onInput={(e) => {\r\n          onFilter(e.target.value)\r\n        }}\r\n      />\r\n    </label>\r\n  )\r\n}\r\n","import { useSelector } from 'react-redux'\r\n\r\nimport Container from '../components/Container/Container'\r\nimport Phonebook from '../components/Phonebook/Phonebook'\r\nimport Contacts from '../components/Contacts/Contacts'\r\nimport Filter from '../components/Filter/Filter'\r\nimport { useGetContactsQuery } from '../redux/Contacts/contacts-reducer'\r\nimport { getToken } from '../redux/Users/users-selector'\r\n\r\nexport default function ContactsPage() {\r\n  const token = useSelector(getToken)\r\n  const { data } = useGetContactsQuery(token)\r\n\r\n  return (\r\n    <>\r\n      {' '}\r\n      <Container title=\"Phonebook\">\r\n        <Phonebook />\r\n      </Container>\r\n      <Container title=\"Contacts\">\r\n        {data && data.length >= 2 && <Filter />}\r\n        <Contacts />\r\n      </Container>\r\n    </>\r\n  )\r\n}\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainForm\":\"Phonebook_mainForm__1vSBA\",\"label\":\"Phonebook_label__2gNkL\",\"input\":\"Phonebook_input__2dZzU\",\"button\":\"Phonebook_button__1g3Um\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"Contacts_list__8lH_7\",\"item\":\"Contacts_item__LcJzr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"itemText\":\"ContactItem_itemText__1g5Wr\",\"button\":\"ContactItem_button__3niij\",\"input\":\"ContactItem_input__3TcMB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"Filter_label___RAql\",\"input\":\"Filter_input__30aPy\"};"],"sourceRoot":""}